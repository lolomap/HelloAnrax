{
  "RANDOM": "№0",
  "Kzhachich": "RANDOM < 0.11",
  "FAIL": "(Power < 15) | (NeutralLoyalty < 0.5) | (Kzhachich > 0)",
  
  "TURN": "TURN + 1",
  "EVERY2": "TURN % 2",
  "EVERY3": "TURN % 3",
  "EVERY5": "TURN % 5",
  "EVERY10": "TURN % 10",
  
  "EconomicReportBestChance": "(EconomicPower < 25) * 10 + ((EconomicPower ≥ 25) & (EconomicPower ≤ 75)) * 20 + (EconomicPower > 75) * 25",
  "EconomicReportMediumChance": "(EconomicPower < 25) * 45 + ((EconomicPower ≥ 25) & (EconomicPower ≤ 75)) * 60 + (EconomicPower > 75) * 65",
  "EconomicReportWorstChance": "(EconomicPower < 25) * 35 + ((EconomicPower ≥ 25) & (EconomicPower ≤ 75)) * 20 + (EconomicPower > 75) * 10",
  "EconomicReportTiming": "(TURN % 20) = 0",
  "EconomicReport": "EconomicReportTiming * ((RANDOM < EconomicReportWorstChance) * 1 + ((RANDOM ≥ EconomicReportWorstChance) & (RANDOM < (EconomicReportMediumChance + EconomicReportWorstChance))) * 2 + (RANDOM ≥ (EconomicReportMediumChance + EconomicReportWorstChance)) * 3)",

  "PositiveBlock": "(NationalistsLoyalty > 50) * NationalistsPower + (DemocratsLoyalty > 50) * DemocratsPower + (FederationistsLoyalty > 50) * FederationistsPower",
  "NegativeBlock": "(NationalistsLoyalty < 50) * NationalistsPower + (DemocratsLoyalty < 50) * DemocratsPower + (FederationistsLoyalty < 50) * FederationistsPower",

  "NationalistsDemocratsConcurrency": "|(DemocratsPower - NationalistsPower)",
  "NationalistsFederationistsConcurrency": "|(FederationistsPower - NationalistsPower)",
  "DemocratsFederationistsConcurrency": "|(DemocratsPower - FederationistsPower)",

  "HIGHLIGHT_NationalistsPower": "NationalistsPower - (NationalistsDemocratsConcurrency ≤ 5 | NationalistsFederationistsConcurrency ≤ 5) * 2",
  "HIGHLIGHT_DemocratsPower": "DemocratsPower - (NationalistsDemocratsConcurrency ≤ 5 | DemocratsFederationistsConcurrency ≤ 5) * 2",
  "HIGHLIGHT_FederationistsPower": "FederationistsPower - (NationalistsFederationistsConcurrency ≤ 5 | DemocratsFederationistsConcurrency ≤ 5) * 2",
  
  "PowerDelta": "(PositiveBlock > NegativeBlock) * PositiveBlock / 5 - (NegativeBlock > PositiveBlock) * NegativeBlock / 5 - (NeutralLoyalty < 50) * (NeutralLoyalty / 3)",
  "HIGHLIGHT_Power": "Power + PowerDelta"
}